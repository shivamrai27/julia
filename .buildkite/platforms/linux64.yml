# These steps should only run on `sandbox.jl` machines, not `docker`-isolated ones
# since we need nestable sandboxing.  The rootfs images being used here are built from
# the `.buildkite/rootfs_images/llvm-passes.jl` file.
agents:
  queue: "julia"
  # Only run on `sandbox.jl` machines (not `docker`-isolated ones) since we need nestable sandboxing
  sandbox.jl: "true"
  os: "linux"

steps:
  - label: "package_linux64"
    key: package_linux64
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v1/llvm-passes.tar.gz
          rootfs_treehash: "f3ed53f159e8f13edfba8b20ebdb8ece73c1b8a8"
          uid: 1000
          gid: 1000
          workspaces:
            # Include `/cache/repos` so that our `git` version introspection works.
            - "/cache/repos:/cache/repos"
    commands: |
      echo "--- Build Julia from source"
      make -j 6
      make release
      make install

      echo "--- Print Julia version info"
      ./julia -e 'using InteractiveUtils; InteractiveUtils.versioninfo()'

      echo "--- Compress build artifacts"
      mv julia-* julia-artifact
      rm -rf julia-linux64.tar.gz
      tar czf julia-linux64.tar.gz julia-artifact/

      echo "--- Upload build artifacts"
      buildkite-agent artifact upload julia-linux64.tar.gz
    timeout_in_minutes: 60
    notify:
      - github_commit_status:
          context: "package_linux64"

  - label: "tester_linux64"
    key: tester_linux64
    depends_on: package_linux64
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v1/llvm-passes.tar.gz
          rootfs_treehash: "f3ed53f159e8f13edfba8b20ebdb8ece73c1b8a8"
          uid: 1000
          gid: 1000
          workspaces:
            # Include `/cache/repos` so that our `git` version introspection works.
            - "/cache/repos:/cache/repos"
    commands: |
      echo "--- Check that the home directory exists"
      echo $${HOME}
      ls -ld $${HOME}

      echo "--- Download build artifacts"
      rm -rf julia-linux64.tar.gz
      buildkite-agent artifact download julia-linux64.tar.gz .

      echo "--- Extract build artifacts"
      rm -rf julia-artifact/
      tar xzf julia-linux64.tar.gz julia-artifact/

      echo "--- Print Julia version info"
      julia-artifact/bin/julia -e 'using InteractiveUtils; InteractiveUtils.versioninfo()'
      julia-artifact/bin/julia -e '@info "" Sys.CPU_THREADS homedir() ENV["USER"]'

      echo "--- Run the Julia test suite"
      julia-artifact/bin/julia .buildkite/rr_capture.jl julia-artifact/bin/julia -e 'Base.runtests(["all"]; ncores = Sys.CPU_THREADS)'
    timeout_in_minutes: 120
    notify:
      - github_commit_status:
          context: "tester_linux64"
